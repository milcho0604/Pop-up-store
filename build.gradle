plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.store'
version = '0.0.1-SNAPSHOT'
description = 'popup'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // 기존 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.netflix.graphql.dgs.codegen:graphql-dgs-codegen-gradle:7.0.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
//	mapstruct를 사용하기 위한 의존선 라이브러리
    implementation "org.mapstruct:mapstruct:1.5.3.Final"
//	Mapstruct로 각 데이터 매퍼의 클래스를 생성하기 위해 Annotation-processor 를 추가해 주어야함
    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
//	Lombok 과 Mapstruct 충돌을 없애기 위해 어노테이션 프로세서를 선언해줘야함.
//	이를 하지 않으면 롬복과 호출 순서에서 충돌이 있을 수 있다. -> Mapstruct 가 롬복의 getter, setter ,builder 를 사용하기 때문
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JSON Web Token (JWT)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.hibernate.validator:hibernate-validator:7.0.5.Final'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

//    implementation 'software.amazon.awssdk:s3:2.17.58'
    implementation 'software.amazon.awssdk:s3:2.20.40'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-laun\\cher'

}

tasks.named('test') {
    useJUnitPlatform()
}
